global:
  startup: ['man', 'tray','taskrunner']

hardware:
  voltage_generator:
    module.Class: 'power_supply.Keythley_2231A.KeythleyPowerSupply'
    voltage_min: 0
    voltage_max_1: 30
    voltage_max_2: 30
    voltage_max_3: 5
    current_max: 3
    usb_address: 'ASRL6::INSTR'
    usb_timeout: 10
    negative_polarity: False

  arduino_uno_r3:
    module.Class: 'arduinos.arduino_uno_r3.ArduinoUnoR3'
    usb_address: COM7
    usb_timeout: 10
    baud_rate: 115200

  mynicard:
     module.Class: 'national_instruments_px_scan.NationalInstrumentsXSeriesPxScan'
     motion_clock_channel: '/Dev1/Ctr2'
     default_motion_clock_frequency: 100
     photo_diode_channel: '/Dev1/AI1'
     photo_diode_voltage_range: [0, 10]
     photon_sources:
       - '/Dev1/PFI0'
     counter_clock: '100kHzTimebase'
     counter_channels:
       - '/Dev1/Ctr3'
     counter_ai_channels:
       - '/Dev1/AI0'
     counter_voltage_range: [-10, 10]
     sample_scanner_ao_channels:
       - '/Dev1/AO0'
       - '/Dev1/AO1'
     tip_scanner_ao_channels:
       - '/Dev1/AO2'
       - '/Dev1/AO3'
     sample_scanner_ai_channels:
       - '/Dev1/AI0'
     sample_scanner_counter_channels:
       - '/Dev1/Ctr3'
     tip_scanner_ai_channels:
       - '/Dev1/AI2'
     tip_scanner_counter_channels:
       - '/Dev1/Ctr3'
     sample_scanner_voltage_ranges:
       - [0, 3]
       - [0, 3]
     tip_scanner_voltage_ranges:
       - [0, 10]
       - [0, 10]
     sample_scanner_position_ranges:
       - [0, 50e-6]
       - [0, 50e-6]
     tip_scanner_position_ranges:
       - [0, 50e-6]
       - [0, 50e-6]
     default_samples_number: 50
     max_counts: 3e7
     read_write_timeout: 10
     counting_edge_rising: True

  mw_source:
     module.Class: 'microwave.mw_source_srssg.MicrowaveSRSSG'
     gpib_address: 'GPIB0::22::INSTR'
     gpib_timeout: 10

  nicard_6343_instreamer:
    module.Class: 'ni_x_series_in_streamer.NIXSeriesInStreamer'
    device_name: 'Dev1'
    digital_sources:
      - 'PFI0'
    adc_voltage_range:
      - [-10,10]
    max_channel_samples_buffer: 10000000
    read_write_timeout: 10

  nicard_6001:
    module.Class: 'ni_usb_6x_series.NationalInstrumentsUSB6000x'
    laser_ao_channel: '/Dev2/AO0'
    laser_ao_voltage_range: [-10,10]

gui:
  tray:
    module.Class: 'trayicon.TrayIcon'

  man:
    module.Class: 'manager.managergui.ManagerGui'

  vectormagnet:
    module.Class: vector_magnet.vector_gui.VectorMagnetGui
    connect:
      power_supply_logic: powersupplylogic

  odmr:
    module.Class: odmr.odmrpxgui.ODMRGui
    connect:
      odmrlogic: odmrlogic

  taskrunner:
    module.Class: 'taskrunner.taskgui.TaskGui'
    connect:
      tasklogic: 'tasklogic'

  errortest:
    module.Class: 'testgui.TestGui'
    text: 'Random text from config'
    error: 'This config is required!'

  afmcfmgui:
     module.Class: 'snvm.snvm_gui.SnvmGui'
     connect:
       snvm_logic: 'snvmlogic'
       optimizer_logic: 'optimizerlogic'

  timeseries:
    module.Class: 'time_series.time_series_gui.TimeSeriesGui'
    connect:
      _time_series_logic_con: timeserieslogic

logic:
  powersupplylogic:
    module.Class: power_supply_logic.PowerSupplyLogic
    connect:
      powersupply: voltage_generator
      arduino: arduino_uno_r3

  kernellogic:
    module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
    remoteaccess: True

  savelogic:
    module.Class: 'save_logic.SaveLogic'
    win_data_directory: 'C:\Users\QMPL\Documents\Qudi\data'
    unix_data_directory: 'Qudidata/'
    log_into_daily_directory: True
    save_pdf: False
    save_png: True

  hdf5savelogic:
    module.Class: 'save_logic.HDF5SaveLogic'
    win_data_directory: 'C:\Users\QMPL\Documents\Qudi\data'
    unix_data_directory: 'Qudidata/'
    log_into_daily_directory: True
    save_pdf: True
    save_png: True

  fitlogic:
    module.Class: 'fit_logic.FitLogic'

  optimizerlogic:
    module.Class: 'optimizer_pxlogic.OptimizerLogicPxScan'
    optimizer_stack: 'tip'
    connect:
      fitlogic: 'fitlogic'
      scanner: 'mynicard'

  snvmlogic:
    module.Class: 'snvm_logic_alt.SnvmLogic'
    connect:
      doublescanner: 'mynicard'
      odmrscanner: 'mw_source'
      savelogic: 'hdf5savelogic'

  odmrlogic:
    module.Class: odmr_logic.ODMRPxLogic
    connect:
      photon_counter: mynicard
      fitlogic: fitlogic
      mw_source: mw_source
      savelogic: hdf5savelogic

  timeserieslogic:
    module.Class: 'time_series_reader_logic.TimeSeriesReaderLogic'
    max_frame_rate: 20
    connect:
      _streamer_con: nicard_6343_instreamer
      _savelogic_con: savelogic

global:
  startup:
    - man
    - tray
  module_server:
    address: 'localhost'
    port: 12345
  stylesheet: qdark.qss
